name: "auto-encoder"
train_steps: 12200
test_steps:100
test_freq:1000
disp_freq:100
checkpoint_path: "examples/rbm/rbm4/checkpoint/step6000-worker0"
checkpoint_path: "examples/rbm/rbm3/checkpoint/step6000-worker0"
checkpoint_path: "examples/rbm/rbm2/checkpoint/step6000-worker0"
checkpoint_path: "examples/rbm/rbm1/checkpoint/step6000-worker0"
train_one_batch{
  alg: kBP
}
updater{
  type: kAdaGrad
  learning_rate{
  base_lr: 0.01
  type: kFixed
  }
}

neuralnet {
  layer {
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "examples/mnist/train_data.bin"
      batchsize: 100
      std_value: 255
      shape: 784
    }
    include: kTrain
  }

  layer {
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "examples/mnist/test_data.bin"
      std_value: 255
      batchsize: 100
      shape: 784
    }
    include: kTest
  }


  layer{
    name: "Inner1"
    type: kInnerProduct
    srclayers:"data"
    innerproduct_conf{
      num_output: 1000
    }
    param{
      name: "w1"
    }
    param{
      name: "b12"
    }
  }

  layer{
    name: "Sigmoid1"
    type: kSigmoid
    srclayers:"Inner1"
  }
  layer{
    name: "Inner2"
    type: kInnerProduct
    srclayers:"Sigmoid1"
    innerproduct_conf{
      num_output: 500
    }
    param{
      name: "w2"
    }
    param{
      name: "b22"
    }
  }

  layer{
    name: "Sigmoid2"
    type: kSigmoid
    srclayers:"Inner2"
  }

  layer{
    name: "Inner3"
    type:  kInnerProduct
    srclayers:"Sigmoid2"
    innerproduct_conf{
      num_output: 250
    }
    param{
      name: "w3"
    }
    param{
      name: "b32"
    }
  }

  layer{
    name: "Sigmoid3"
    type: kSigmoid
    srclayers:"Inner3"
  }

  layer{
    name: "Inner4"
    type: kInnerProduct
    srclayers:"Sigmoid3"
    innerproduct_conf{
      num_output: 30
    }
    param{
      name: "w4"
    }
    param{
      name: "b42"

    }
  }

  layer{
    name: "Inner5"
    type: kInnerProduct
    #srclayers:"Sigmoid4"
    srclayers:"Inner4"
    innerproduct_conf{
      num_output: 250
      transpose: true
    }
    param{
      name: "w5"
      share_from: "w4"
    }
    param{
      name: "b41"
    }
  }

  layer{
    name: "Sigmoid5"
    type: kSigmoid
    srclayers:"Inner5"
  }
  layer{
    name: "Inner6"
    type: kInnerProduct
    srclayers:"Sigmoid5"
    innerproduct_conf{
      num_output: 500
      transpose: true
    }
    param{
      name: "w6"
      share_from: "w3"
    }
    param{
      name: "b31"
    }
  }

  layer{
    name: "Sigmoid6"
    type: kSigmoid
    srclayers:"Inner6"
  }
 layer{
    name: "Inner7"
    type: kInnerProduct
    srclayers:"Sigmoid6"
    innerproduct_conf{
      num_output: 1000
      transpose: true
    }
    param{
      name: "w7"
      share_from: "w2"
    }
    param{
      name: "b21"
    }

  }

  layer{
    name: "Sigmoid7"
    type: kSigmoid
    srclayers:"Inner7"
  }
 layer{
    name: "Inner8"
    type: kInnerProduct
    srclayers:"Sigmoid7"
    innerproduct_conf{
      num_output: 784
      transpose: true
    }
    param{
      name: "w8"
      share_from: "w1"
    }
    param{
      name: "b11"
    }
  }

  layer{
    name: "Sigmoid8"
    type: kSigmoid
    srclayers:"Inner8"
  }

  layer{
    name: "loss"
    type:kEuclideanLoss
    srclayers:"Sigmoid8"
    srclayers:"data"
  }
}
cluster {
  nworker_groups: 1
  nserver_groups: 1
  workspace: "examples/rbm/autoencoder/"
}
