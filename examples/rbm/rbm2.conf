name: "rbm2"
train_steps: 6000
test_steps:100
test_freq:500
disp_freq: 100
train_one_batch{
  alg: kCD
}
checkpoint_path: "examples/rbm/rbm1/checkpoint/step6000-worker0"
updater{
  type: kSGD
  momentum: 0.8
  weight_decay: 0.0002
  learning_rate{
  base_lr: 0.1
  type: kFixed
  }
}

neuralnet {
  layer {
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "examples/mnist/train_data.bin"
      batchsize: 100
      std_value: 255
      shape: 784
    }
    include: kTrain
  }

  layer {
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "examples/mnist/test_data.bin"
      std_value: 255
      batchsize: 100
      shape: 784
    }
    include: kTest
  }

layer{
  name: "Inner1"
  type: kInnerProduct
  srclayers:"data"
  innerproduct_conf{
    num_output: 1000
  }
  param{
    name: "w1"
  }
  param{
    name: "b12"
  }
}

layer{
  name: "Sigmoid1"
  type: kSigmoid
  srclayers:"Inner1"
}

layer{
  name: "RBMVis"
  type: kRBMVis
  srclayers:"Sigmoid1"
  srclayers:"RBMHid"
  rbm_conf{
    hdim: 500
  }
  param{
    name: "w2"
    init{
      type: kGaussian
      mean: 0.0
      std: 0.1
    }
  }

  param{
    name: "b21"
    wd_scale: 0
    init{
    type: kConstant
    value: 0.0
    }
  }
}

layer{
  name: "RBMHid"
  type: kRBMHid
  srclayers:"RBMVis"
  rbm_conf{
    hdim: 500
  }
  param{
    name: "w2_"
    share_from: "w2"
  }
 param{
    name: "b22"
    wd_scale: 0
    init{
      type: kConstant
      value: 0.0
    }
  }
}
}
cluster {
  nworker_groups: 1
  nserver_groups: 1
  nservers_per_group: 1
  nworkers_per_group: 1
  workspace: "examples/rbm/rbm2/"
}
